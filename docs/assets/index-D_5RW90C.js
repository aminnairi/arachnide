(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const u of o.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function r(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=r(i);fetch(i.href,o)}})();const a=e=>{if(e==null)return null;if(typeof e=="string")return document.createTextNode(e);if(typeof e=="boolean"||typeof e=="number")return document.createTextNode(String(e));const t=document.createElement(e.name);return Object.entries(e.attributes).forEach(([r,n])=>{n!=null&&(t[r]=n)}),e.children.forEach(r=>{const n=a(r);n!==null&&t.appendChild(n)}),t},f=(e,t)=>r=>{if(e!=null)if(typeof e!="string"&&typeof e!="number"&&typeof e!="boolean")if(t!=null)if(typeof t!="string"&&typeof t!="number"&&typeof t!="boolean")if(e.name===t.name)Object.entries(e.attributes).forEach(([n,i])=>{const o=t.attributes[n];o!=null?o!==i&&(r[n]=o):r[n]=null}),Object.entries(t.attributes).forEach(([n,i])=>{e.attributes[n]==null&&i!=null&&(r[n]=i)}),e.children.forEach((n,i)=>{if(r===null)throw new Error("Invalid DOM node found. Has the DOM been manually updated?");const o=t.children[i],u=r.childNodes[i],l=f(n,o);if(u===void 0)throw new Error("Invalid DOM node found. Has the DOM been manually updated?");window.queueMicrotask(()=>{l(u)})}),t.children.slice(e.children.length).forEach(n=>{const i=f(null,n);window.queueMicrotask(()=>{i(r)})});else{if(r===null)return;const n=a(t);if(n===null)return;r.replaceWith(n)}else{if(Object.is(e,t)||r===null)return;const n=a(t);if(n===null)return;r.replaceWith(n)}else{if(e==null||r===null)return;r.remove()}else{if(Object.is(e,t)||r===null)return;const n=a(t);if(n===null)return;r.replaceWith(n)}else{if(t==null||r===null)return;const n=a(t);if(n===null)return;r.appendChild(n)}},w=e=>{const t=/^\/?(.*?)\/?$/.exec(e);return t?t.at(1)??e:e},p=(e,t)=>{const r=Object.entries(t).find(([n])=>w(n)===w(e));return r?r[1]:()=>null},N=({views:e,root:t,state:r,update:n})=>{let i;const o=window.crypto.randomUUID(),u=c=>{c!==null&&window.dispatchEvent(new CustomEvent(o,{detail:c}))},l=(c,s)=>{window.history.pushState(null,c,Object.entries(s).reduce((h,[O,v])=>h.replaceAll(`:${O}`,String(v)),c)),window.dispatchEvent(new CustomEvent("popstate"))};window.addEventListener("popstate",()=>{const c=p(window.location.pathname,e)({state:r,emit:u,go:l}),s=f(i,c);i=c,s(t.firstChild)}),window.addEventListener(o,({detail:c})=>{r=n({event:c,state:r});const s=p(window.location.pathname,e)({state:r,emit:u,go:l}),h=f(i,s);i=s,h(t.firstChild)});const m=p(window.location.pathname,e)({state:r,emit:u,go:l}),b=a(m);return i=m,b!==null&&t.appendChild(b),{emit:u,go:l}},d=({attributes:e,children:t})=>({name:"button",attributes:e,children:t}),y=({attributes:e,children:t})=>({name:"div",attributes:e,children:t}),E=({attributes:e,children:t})=>({name:"span",attributes:e,children:t}),g=document.getElementById("root");if(!g)throw new Error("Root element not found");N({root:g,state:{counter:15},update:({state:e,event:t})=>t.type==="INCREMENT"?{...e,counter:e.counter+1}:t.type==="DECREMENT"?{...e,counter:e.counter-1}:e,views:{"/arachnide/info":({state:e,go:t})=>y({attributes:{},children:[E({attributes:{},children:[`Hint: counter was previously ${e.counter}`]}),d({attributes:{onclick:()=>{t("/arachnide",{})}},children:["Go back"]})]}),"/arachnide":({state:e,emit:t,go:r})=>y({attributes:{},children:[d({attributes:{onclick:()=>{r("/arachnide/info",{})}},children:["Go to info"]}),d({attributes:{onclick:()=>{t({type:"DECREMENT",payload:null})}},children:["Decrement"]}),E({attributes:{},children:[e.counter]}),d({attributes:{onclick:()=>{t({type:"INCREMENT",payload:null})}},children:["Increment"]})]})}});
